# Generated by Django 3.0.2 on 2020-01-23 16:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('login', models.CharField(max_length=64, unique=True)),
                ('password', models.CharField(max_length=64)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameters', models.TextField()),
                ('games_created', models.IntegerField(default=0)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('draws', models.IntegerField(default=0)),
                ('finish_games_count', models.IntegerField()),
                ('done', models.BooleanField(default=False)),
                ('passed', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('sha', models.CharField(max_length=64, null=True)),
                ('network_number', models.IntegerField(null=True)),
                ('file', models.FileField(upload_to='networks/')),
                ('elo', models.FloatField(default=1600.0)),
                ('games_played', models.IntegerField(default=0)),
                ('layers', models.IntegerField(default=0)),
                ('filters', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('training_parameters', models.TextField()),
                ('active', models.BooleanField(default=False)),
                ('last_game', models.IntegerField(default=0)),
                ('last_network', models.IntegerField(default=0)),
                ('best_network', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.Network')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('file', models.FileField(upload_to='training_games/')),
                ('network', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Network')),
                ('training_run', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.TrainingRun')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='network',
            name='training_run',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='networks', to='core.TrainingRun'),
        ),
        migrations.CreateModel(
            name='MatchGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('file', models.FileField(upload_to='match_games/')),
                ('done', models.BooleanField(default=False)),
                ('result', models.IntegerField(null=True)),
                ('match', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='games', to='core.Match')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='match_games', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='candidate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.Network'),
        ),
        migrations.AddField(
            model_name='match',
            name='current_best',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.Network'),
        ),
        migrations.AddField(
            model_name='match',
            name='training_run',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches', to='core.TrainingRun'),
        ),
        migrations.AddField(
            model_name='user',
            name='assigned_training_run',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.TrainingRun'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
